name: iOS - Make ad-hoc build

defaults:
  run:
    working-directory: iOS

on:
  workflow_dispatch:
    inputs:
      suffix:
        description: "Text to append at the end of the build name"
        required: false
      asana-task-url:
        description: "Asana task URL"
        required: false
        type: string
      build-type:
        description: "Build Configuration"
        type: choice
        required: true
        default: 'Alpha'
        options:
           - Alpha
           - Release

jobs:
  make-adhoc:
    runs-on: macos-15-xlarge
    name: Make ad-hoc build

    env:
      RUNS_ON: macos-15-xlarge # keep this in sync with runs-on above

    steps:

      - name: Register SSH keys for access to certificates
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_FASTLANE_MATCH }}

      - name: Check out the code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Start measuring duration
        id: start-duration
        uses: ./.github/actions/measure-duration
        with:
          mode: start

      - name: Select Xcode
        uses: ./.github/actions/select-xcode-version

      - name: Setup Ruby and dependencies
        uses: ./.github/actions/setup-ruby
        with:
          working-directory: iOS
          cache-key-prefix: ios-ruby

      - name: Archive and upload the app
        id: archive-and-upload
        env:
          APPLE_API_KEY_BASE64: ${{ secrets.APPLE_API_KEY_BASE64 }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_KEY_ISSUER: ${{ secrets.APPLE_API_KEY_ISSUER }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        run: |
          lane_to_use="adhoc"
          if [[ "${{ github.event.inputs.build-type }}" == "Release" ]]; then
            lane_to_use="release_adhoc"
          fi

          if [[ -n "${{ github.event.inputs.suffix }}" ]]; then
            bundle exec fastlane ${lane_to_use} suffix:${{ github.event.inputs.suffix }}
          else
            bundle exec fastlane ${lane_to_use}
          fi

      - name: Report job duration
        if: success() || (always() && steps.archive-and-upload.outcome == 'failure')
        uses: ./.github/actions/measure-duration
        with:
          mode: stop
          start-timestamp: ${{ steps.start-duration.outputs.start-timestamp }}

      - name: Set filenames
        run: |
          echo "ipa_filename=${{ env.output_name }}.ipa" >> $GITHUB_ENV
          echo "dsyms_filename=${{ env.output_name }}.app.dSYM.zip" >> $GITHUB_ENV

      - name: Set paths
        run: |
          echo "ipa_path=${{ github.workspace }}/iOS/${{ env.ipa_filename }}" >> $GITHUB_ENV
          echo "dsyms_path=${{ github.workspace }}/iOS/${{ env.dsyms_filename }}" >> $GITHUB_ENV

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ipa_filename }}
          path: ${{ env.ipa_path }}

      - name: Upload dSYMs artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.dsyms_filename }}
          path: ${{ env.dsyms_path }}

      - name: Upload dSYM to S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
          DSYM_S3_PATH: s3://${{ vars.DSYM_BUCKET_NAME }}/${{ vars.IOS_DSYM_BUCKET_PREFIX }}/
        run: |
          aws s3 cp "${{ env.dsyms_path }}" ${{ env.DSYM_S3_PATH }}

      - name: Get Asana Task ID
        if: inputs.asana-task-url
        id: get-task-id
        env:
          ASANA_TASK_URL: ${{ inputs.asana-task-url }}
        run: |
          task_id=$(echo "$ASANA_TASK_URL" \
            | perl -pe 's|.*https://app.asana.com/0/[0-9]+/([0-9]+)(?:/f)?|\1|; \
              s|.*https://app.asana.com/1/[0-9]+(?:/[0-9a-z/]*)?/task/([0-9]+)(:?/[0-9a-z/]*)?(?:\?focus=true)?|\1|; \
              s|.*https://app.asana.com/1/[0-9]+/inbox/[0-9]+/item/([0-9]+)/story/([0-9]+)(?:\?focus=true)?|\1|'
          )
          echo "task_id=${task_id//[^0-9]/}" >> $GITHUB_OUTPUT

      - name: Upload IPA to Asana
        if: inputs.asana-task-url
        env:
          ASANA_ACCESS_TOKEN: ${{ secrets.ASANA_ACCESS_TOKEN }}
        run: |
          curl -s "https://app.asana.com/api/1.0/tasks/${{ steps.get-task-id.outputs.task_id }}/attachments" \
            -H "Authorization: Bearer ${{ secrets.ASANA_ACCESS_TOKEN }}" \
            --form "file=@${{ env.ipa_path }};type=application/zip"
